from flask import Flask, render_template, request, send_from_directory
import pandas as pd
import numpy as np
from datetime import datetime
import os

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('index.html', result=None)

@app.route('/upload', methods=['POST'])
def upload_files():
    start_date = request.form['start_date']
    end_date = request.form['end_date']

    # Read schedule from form input instead of Excel
    schedule_df = {}
    for day in ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']:
        subjects_str = request.form.get(f'schedule_{day}', '')
        subjects = [s.strip() for s in subjects_str.split(',') if s.strip()]
        schedule_df[day] = subjects

    # Load holiday file (use static default if none uploaded)
    holidays_file = request.files.get('holidays')
    if holidays_file and holidays_file.filename != '':
        holidays_df = pd.read_excel(holidays_file)
    else:
        default_path = os.path.join('static', 'data', 'holidays.xlsx')
        holidays_df = pd.read_excel(default_path)

    # Filter holidays by date range
    holidays_df['Date'] = pd.to_datetime(holidays_df['Date'])
    holidays_df = holidays_df[
        (holidays_df['Date'] >= pd.to_datetime(start_date)) &
        (holidays_df['Date'] <= pd.to_datetime(end_date))
    ]
    holidays_df['Weekday'] = holidays_df['Date'].dt.day_name()

    # Count holidays by weekday
    weekday_holiday_count = holidays_df['Weekday'].value_counts().to_dict()

    # Count all weekdays in date range
    all_dates = pd.date_range(start=start_date, end=end_date)
    weekday_counts = pd.Series([d.strftime('%A') for d in all_dates]).value_counts().to_dict()

    # Calculate effective weekdays
    effective_weekdays = {
        day: max(0, weekday_counts.get(day, 0) - weekday_holiday_count.get(day, 0))
        for day in ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
    }

    # Count subject occurrences per weekday
    subject_weekday_count = {}
    for day, subjects in schedule_df.items():
        for subject in subjects:
            if subject.lower() == 'nan' or subject == '':
                continue
            if subject not in subject_weekday_count:
                subject_weekday_count[subject] = {}
            if day not in subject_weekday_count[subject]:
                subject_weekday_count[subject][day] = 0
            subject_weekday_count[subject][day] += 1

    # Calculate attendance info
    threshold_percent = float(request.form['threshold'])
    ATTENDANCE_THRESHOLD = threshold_percent / 100.0

    subject_attendance_data = []
    for subject, days in subject_weekday_count.items():
        total_classes = 0
        for day, count in days.items():
            total_classes += count * effective_weekdays.get(day, 0)
        min_required = int(np.ceil(total_classes * ATTENDANCE_THRESHOLD))
        max_absents = total_classes - min_required
        subject_attendance_data.append({
            'Subject': subject,
            'TotalClasses': total_classes,
            'MinRequired': min_required,
            'MaxAbsents': max_absents
        })

    # Convert to DataFrame for HTML rendering
    result_df = pd.DataFrame(subject_attendance_data)
    result_html = result_df.to_html(classes='table table-bordered table-striped', index=False)

    return render_template('index.html', result=result_html)

# Route to download default holiday format
@app.route('/download-default-holidays')
def download_holiday_format():
    return send_from_directory(
        directory=os.path.join(app.root_path, 'static', 'data'),
        path='holidays.xlsx',
        as_attachment=True
    )

if __name__ == '__main__':
    app.run(debug=True)




index.html:
<!DOCTYPE html>
<html>
<head>
  <title>SmartBunks Attendance Calculator</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link
    rel="stylesheet"
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
  />
  <style>
    body {
      background-color: #f4f6f8;
      font-size: 15px;
    }

    .container {
      margin-top: 30px;
      max-width: 1000px;
    }

    .card {
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.304);
      padding: 20px;
      margin-bottom: 20px;
      border-radius: 10px;
    }

    textarea {
      resize: none;
    }

    .row {
      display: flex;
      flex-wrap: wrap;
    }

    .col-md-6 {
      display: flex;
      flex-direction: column;
    }

    .card.form-section {
      flex: 1;
      overflow-y: visible;
    }

    label {
      font-weight: 500;
    }

    h2, h5 {
      font-weight: bold;
    }

    .btn-primary {
      width: 100%;
    }

    h1 {
      text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.489);
    }
    .form-left{
      justify-content:space-between;
    }

    @media (max-width: 768px) {
      body {
        font-size: 14px;
      }

      .card {
        padding: 15px;
      }

      h2 {
        font-size: 22px;
      }

      h5 {
        font-size: 18px;
      }

      .form-group label {
        font-size: 14px;
      }

      .btn {
        width: 100%;
      }

      .form-section {
        max-height: 800px;
        overflow-y: auto;
      }
    }
  </style>
</head>
<body>

  <div class="container">
    <h1 class="mb-3 text-center fw-bold glow-text" style=" font-weight: 800; margin-top: +10px; margin-bottom: 10px; ">
      _Smart_Bunk_Analyzer_
    </h1>
    <p class="mb-3 text-center fw-bold" style="font-weight: 300; margin-top: -10px;">by SmartBunks</p><br>

    <form action="/upload" method="post" enctype="multipart/form-data">
      <div class="row">
        <!-- Left card -->
        <div class="col-md-6 mb-3">
          <div class="card form-section form-left">
            <h5 class="mb-3 text-center" style="text-shadow: 1px 1px 4px rgba(0,0,0,0.3);">Basic Info</h5>
            <div class="form-group">
              <label for="start_date">Start Date</label>
              <input type="date" class="form-control" id="start_date" name="start_date" required>
            </div>
            <div class="form-group">
              <label for="end_date">End Date</label>
              <input type="date" class="form-control" id="end_date" name="end_date" required>
            </div>
            <div class="form-group">
              <label for="threshold">Attendance Threshold (%)</label>
              <input type="number" class="form-control" id="threshold" name="threshold" min="0" max="100" value="75" placeholder="75" required>
            </div>
            <div class="form-group">
              <label>Upload Holidays Excel File (*Optional*)</label>
              <input type="file" class="form-control-file" name="holidays">
              <small class="form-text text-muted">
                (Optional) <a href="/download-default-holidays" target="_blank">Download default holiday format</a>
              </small>
            </div><br>
            <div class="text-center mb-4">
              <button type="submit" class="btn btn-primary px-4">Calculate Bunk Allowance</button>
            </div>
          </div>
        </div>

        <!-- Right card -->
        <div class="col-md-6 mb-3">
          <div class="card form-section">
            <h5 class="mb-3 text-center" style="text-shadow: 1px 1px 4px rgba(0,0,0,0.3);">Weekly Timetable</h5>
            <div class="form-group">
              <label for="schedule_Monday">Monday</label>
              <textarea class="form-control" name="schedule_Monday" rows="1" placeholder="e.g., Math, Physics"></textarea>
            </div>
            <div class="form-group">
              <label for="schedule_Tuesday">Tuesday</label>
              <textarea class="form-control" name="schedule_Tuesday" rows="1" placeholder="e.g., English, Chemistry"></textarea>
            </div>
            <div class="form-group">
              <label for="schedule_Wednesday">Wednesday</label>
              <textarea class="form-control" name="schedule_Wednesday" rows="1" placeholder="e.g., Biology, Lab"></textarea>
            </div>
            <div class="form-group">
              <label for="schedule_Thursday">Thursday</label>
              <textarea class="form-control" name="schedule_Thursday" rows="1" placeholder="e.g., Math, CS Lab"></textarea>
            </div>
            <div class="form-group">
              <label for="schedule_Friday">Friday</label>
              <textarea class="form-control" name="schedule_Friday" rows="1" placeholder="e.g., Physics, English"></textarea>
            </div>
            <div class="form-group">
              <label for="schedule_Saturday">Saturday</label>
              <textarea class="form-control" name="schedule_Saturday" rows="1" placeholder="e.g., Workshop, Seminar"></textarea>
            </div>
          </div>
        </div>
      </div>
    </form>

    {% if result %}
    <div class="card">
      <h5 class="mb-3">Attendance Summary</h5>
      {{ result|safe }}
    </div>
    {% endif %}
  </div>

  <footer class="text-center py-3 mt-5 border-top" style="font-size: 0.95rem; color: #666;">
    SmartBunks by <strong>Anshuman</strong>
  </footer>

  <!-- JS for saving form inputs -->
  <script>
    window.addEventListener('beforeunload', function () {
      const formElements = document.querySelectorAll('input, textarea');
      formElements.forEach(el => {
        if (el.type !== 'file') {
          localStorage.setItem(el.name || el.id, el.value);
        }
      });
    });

    window.addEventListener('DOMContentLoaded', function () {
      const wasRestored = localStorage.getItem('wasRestored');
      if (!wasRestored) {
        const formElements = document.querySelectorAll('input, textarea');
        formElements.forEach(el => {
          if (el.type !== 'file') {
            const stored = localStorage.getItem(el.name || el.id);
            if (stored) el.value = stored;
          }
        });
        localStorage.setItem('wasRestored', 'true');
      } else {
        const keysToKeep = ['wasRestored'];
        Object.keys(localStorage).forEach(key => {
          if (!keysToKeep.includes(key)) {
            localStorage.removeItem(key);
          }
        });
        localStorage.removeItem('wasRestored');
      }
    });
  </script>
</body>
</html>
